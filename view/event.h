// Events. Free and open source. See LICENSE.

// Logical events, translated from physical keyboard, mouse, window and timer
// events. The S_ prefix represents SHIFT, C_ represents CONTROL (Windows,Linux)
// or COMMAND (Mac), and SC_ represents both. ALT is not used, because ALT
// events are likely to be bound to system-wide operations. TEXT is accompanied
// by a character (Unicode code point). For C_ combined with text, only a
// limited number of combinations are supported because, on many platforms, no
// shift information is available (e.g. = and + are on the same key then C_+ is
// the same as C_=). CLICK and UNCLICK are mouse button down and up events, with
// DRAG being a mouse movement in between. These come with coordinates. SCROLL
// events are generated by a mouse scroll wheel, or equivalent touchpad gesture
// and are accompanied by an amount. BLINK and SAVE are timer events.

enum event {
    ESCAPE, S_ESCAPE, C_ESCAPE, SC_ESCAPE,
    ENTER, S_ENTER, C_ENTER, SC_ENTER,
    TAB, S_TAB, C_TAB, SC_TAB,
    BACKSPACE, S_BACKSPACE, C_BACKSPACE, SC_BACKSPACE,
    INSERT, S_INSERT, C_INSERT, SC_INSERT,
    DELETE, S_DELETE, C_DELETE, SC_DELETE,
    LEFT, S_LEFT, C_LEFT, SC_LEFT,
    RIGHT, S_RIGHT, C_RIGHT, SC_RIGHT,
    UP, S_UP, C_UP, SC_UP,
    DOWN, S_DOWN, C_DOWN, SC_DOWN,
    PAGE_UP, S_PAGE_UP, C_PAGE_UP, SC_PAGE_UP,
    PAGE_DOWN, S_PAGE_DOWN, C_PAGE_DOWN, SC_PAGE_DOWN,
    HOME, S_HOME, C_HOME, SC_HOME,
    END, S_END, C_END, SC_END,
    F1, S_F1, C_F1, SC_F1, F2, S_F2, C_F2, SC_F2, F3, S_F3, C_F3, SC_F3,
    F4, S_F4, C_F4, SC_F4, F5, S_F5, C_F5, SC_F5, F6, S_F6, C_F6, SC_F6,
    F7, S_F7, C_F7, SC_F7, F8, S_F8, C_F8, SC_F8, F9, S_F9, C_F9, SC_F9,
    F10, S_F10, C_F10, SC_F10, F11, S_F11, C_F11, SC_F11,
    F12, S_F12, C_F12, SC_F12,
    CLICK, S_CLICK, C_CLICK, SC_CLICK,
    DRAG, S_DRAG, C_DRAG, SC_DRAG,
    UNCLICK, S_UNCLICK, C_UNCLICK, SC_UNCLICK,
    SCROLL, S_SCROLL, C_SCROLL, SC_SCROLL,
    TEXT,
    C_A, C_B, C_C, C_D, C_E, C_F, C_G, C_H, C_I, C_J, C_K, C_L, C_M,
    C_N, C_O, C_P, C_Q, C_R, C_S, C_T, C_U, C_V, C_W, C_X, C_Y, C_Z,
    C_0, C_1, C_2, C_3, C_4, C_5, C_6, C_7, C_8, C_9, C_PLUS, C_MINUS,
    PASTE, RESIZE, FOCUS, BLUR,
    FRAME, LOAD, BLINK, SAVE, QUIT, IGNORE
};
typedef int event;

// Prefixes that can be added to or subtracted from ESCAPE...SCROLL.
enum prefix {
    S_ = 1, C_ = 2, SC_ = 3
};

const char *findEventName(event e);
