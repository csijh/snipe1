// Events. Free and open source. See LICENSE.

// Event constants for keyboard, mouse, window and timer events. The S_ prefix
// represents SHIFT, C_ represents CONTROL (Windows,Linux) or COMMAND Mac), and
// SC_ represents both. ALT is not used, because Alt events are likely to be
// bound to system-wide operations. TEXT is accompanied by a character (Unicode
// code point). C_TEXT is accompanied by a character (ASCII), to represent C_A,
// C_B, and so on. Note keyboard layout shift information is not available for
// C_TEXT, e.g. C_+ on most keyboards generates C_= instead. CLICK and UNCLICK
// are mouse button down and up events, with DRAG being a mouse movement in
// between. These come with coordinates. The LINE_UP and LINE_DOWN events are
// generated by a mouse scroll wheel, or equivalent touchpad gesture. BLINK and
// SAVE are timer events.

enum event {
    ESCAPE, S_ESCAPE, C_ESCAPE, SC_ESCAPE,
    ENTER, S_ENTER, C_ENTER, SC_ENTER,
    TAB, S_TAB, C_TAB, SC_TAB,
    BACKSPACE, S_BACKSPACE, C_BACKSPACE, SC_BACKSPACE,
    INSERT, S_INSERT, C_INSERT, SC_INSERT,
    DELETE, S_DELETE, C_DELETE, SC_DELETE,
    RIGHT, S_RIGHT, C_RIGHT, SC_RIGHT,
    LEFT, S_LEFT, C_LEFT, SC_LEFT,
    DOWN, S_DOWN, C_DOWN, SC_DOWN,
    UP, S_UP, C_UP, SC_UP,
    PAGE_UP, S_PAGE_UP, C_PAGE_UP, SC_PAGE_UP,
    PAGE_DOWN, S_PAGE_DOWN, C_PAGE_DOWN, SC_PAGE_DOWN,
    HOME, S_HOME, C_HOME, SC_HOME,
    END, S_END, C_END, SC_END,
    CLICK, S_CLICK, C_CLICK, SC_CLICK,
    DRAG, S_DRAG, C_DRAG, SC_DRAG,
    UNCLICK, S_UNCLICK, C_UNCLICK, SC_UNCLICK,
    SCROLL, S_SCROLL, C_SCROLL, SC_SCROLL,
    TEXT, C_TEXT,
    PASTE, RESIZE, FOCUS, DEFOCUS,
    FRAME, LOAD, BLINK, SAVE, QUIT,
};
typedef int event;
